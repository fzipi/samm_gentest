---
# ===========================================================
# OWASP SAMM2 Security Practice template/sample
# ===========================================================
#Link to the function, using its unique identifier
function: fa340fa1816244d79f369ae82e998368

#Unique identifier (GUID) used to refer to this practice.
#Please generate another identifier for your specific practice.
id: bb5488860c124b6e8076b023485023e1

#Official name of this practice
name: Security Testing

#Abbreviation of this practice
shortName: ST

#A one sentence description of the security practice
shortDescription: This practice focuses on the detection and resolution of basic security issues through automation, allowing manual testing to focus on more complex attack vectors.

#A multi-paragraph description of the security practice
longDescription: |
  With manual and automated security tests, projects within the organization routinely run security tests and review results during development and deployment. They detect and fix basic security issues through scalable automation, where manual security testing focuses on more complex attack vectors with deeper understanding of the software. Note that the goal of Security Testing practice is to uncover technical and business-logic weaknesses in an application, irrespective of its requirements. The Requirements-driven testing practice on the other hand, aims to verify that an application correctly implements its requirements. These are often more functional in nature.

  Project teams focus on building granular (manual and automated) security test cases based on the business functionality of their software. A central software security group focuses on specification of automated tests for compliance and internal standards.

  For each project release, make the results of automated and manual security tests available to management and business stakeholders for review, preferably in dashboard form. If there are unaddressed findings that remain as accepted risks for the release, stakeholders and development managers work together to establish a concrete timeframe for addressing them. As part of each release, review and improve the quality of the security tests.

  Consider implementing security test correlation tools to automate the matching and merging of test results from dynamic, static, and interactive application scanners into one central dashboard, providing direct input towards Defect Management. Spread the knowledge of the created security tests and the results across the development team to improve security knowledge and awareness inside the organisation.

#The relative order of this practice in the business function
order: 3

#Who's the "owner" of this practice
assignee: Nessim Kisserli

#Indication of progress to keep track of overall status
progress: 50
#Type Classification of the Document
type: Practice
